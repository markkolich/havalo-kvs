## ===================================================
## Curacao library configuration.
##
## Configures the library/toolkit that sits on top of the
## Servlet container to provide request routing and response
## handling functionality.
## ===================================================

curacao {

  ## Havalo boot package, all Curacao annotated objects for the
  ## Havalo application live in this package on the classpath.
  boot-package = "com.kolich.havalo"

  ## Set the async context timeout to 60-seconds.
  async-context-timeout = 60s

  ## Adjust the size of the request and response thread pools to 100
  ## by default.  This means, in theory, 100*2 total threads will be
  ## managed by an internal pool within Curacao to deal with requests
  ## and responses into the application.
  pools.request {
    size = 100
  }
  pools.response {
    size = 100
  }

  ## Override the default request charset, setting it to UTF-8.
  mappers.request {
    default-character-encoding-if-not-specified = "UTF-8"
  }

}

## ===================================================
## Havalo application configuration.
##
## Configures this Havalo application instance.
## ===================================================

havalo {

  repository {

	# The repository root: where all repositories known to this Havalo
	# instance live on disk.  In production deployments this should be
	# overridden to point at something a bit more real world, ideally
	# would point at some NFS directory or other root on disk outside
	# of the web-application's WEB-INF directory. 
    base = "WEB-INF/work"
    
    # The max filename length of any object on disk.
    # For example, if this is set to 2, then the file path's to repositories
    # and objects on disk will look something like "FG/71/61/==/34/...".
    # Note you shouldn't need to change this unless you're running Havalo
    # on a system with special needs.
    maxfilename.length = 2
        
  }
  
  # Defalt admin user UUID and API access secret
  api {
  
    # The UUID of the Admin user/repository.
    # NOTE: You should change this in production deployments.
    admin.uuid = "00000000-0000-0000-0000-000000000000"
    
    # The corresponding secret of the Admin user/repository.
    # NOTE: You should change this in production deployments. 
    admin.secret = "overrideme"
    
  }
  
  upload {
      
    # Max upload default in bytes (defaults to 2GB).
    # This is essentially the maximum size of any object in the
    # K,V store -- API consumers will not be allowed to 'PUT' any
    # objects greater than this size.
    max.size = 2147483648
    
  }
  
}